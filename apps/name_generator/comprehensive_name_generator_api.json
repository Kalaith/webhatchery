{
  "openapi": "3.0.0",
  "info": {
    "title": "Comprehensive Name Generator API",
    "version": "1.0.0",
    "description": "An extensive API for generating names of people, places, events, and titles with multiple generation techniques and cultural variations",
    "contact": {
      "name": "API Support",
      "email": "support@namegen.api"
    }
  },
  "servers": [
    {
      "url": "https://api.namegen.io/v1",
      "description": "Production server"
    },
    {
      "url": "https://api-staging.namegen.io/v1",
      "description": "Staging server"
    }
  ],
  "paths": {
    "/people/generate": {
      "post": {
        "summary": "Generate person names",
        "description": "Generate names for people using various techniques and cultural patterns",
        "tags": [
          "People Names"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonNameRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully generated names",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonNameResponse"
                }
              }
            }
          }
        }
      }
    },
    "/places/generate": {
      "post": {
        "summary": "Generate place names",
        "description": "Generate names for places including cities, countries, landmarks, and fictional locations",
        "tags": [
          "Place Names"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceNameRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully generated place names",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceNameResponse"
                }
              }
            }
          }
        }
      }
    },
    "/events/generate": {
      "post": {
        "summary": "Generate event names",
        "description": "Generate names for events, festivals, competitions, and occasions",
        "tags": [
          "Event Names"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventNameRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully generated event names",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventNameResponse"
                }
              }
            }
          }
        }
      }
    },
    "/titles/generate": {
      "post": {
        "summary": "Generate titles",
        "description": "Generate titles for books, movies, songs, articles, and other works",
        "tags": [
          "Titles"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TitleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully generated titles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TitleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/batch": {
      "post": {
        "summary": "Generate mixed names in batch",
        "description": "Generate multiple types of names in a single request",
        "tags": [
          "Batch Operations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully generated batch names",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PersonNameRequest": {
        "type": "object",
        "required": [
          "count"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "description": "Number of names to generate"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female",
              "neutral",
              "any"
            ],
            "default": "any",
            "description": "Gender preference for names"
          },
          "culture": {
            "type": "string",
            "enum": [
              "western",
              "eastern",
              "african",
              "latin",
              "nordic",
              "slavic",
              "arabic",
              "indian",
              "chinese",
              "japanese",
              "korean",
              "celtic",
              "german",
              "french",
              "italian",
              "spanish",
              "portuguese",
              "dutch",
              "russian",
              "polish",
              "hungarian",
              "greek",
              "turkish",
              "any"
            ],
            "default": "any",
            "description": "Cultural/ethnic background for names"
          },
          "generation_method": {
            "type": "string",
            "enum": [
              "markov_chain",
              "syllable_based",
              "historical_pattern",
              "phonetic_pattern",
              "traditional_pattern",
              "modern_fusion",
              "fantasy_generated",
              "procedural",
              "random"
            ],
            "default": "random",
            "description": "Method used to generate names"
          },
          "name_type": {
            "type": "string",
            "enum": [
              "first_only",
              "last_only",
              "full_name",
              "nickname",
              "formal"
            ],
            "default": "full_name",
            "description": "Type of name to generate"
          },
          "historical_period": {
            "type": "string",
            "enum": [
              "ancient",
              "medieval",
              "renaissance",
              "colonial",
              "victorian",
              "modern",
              "contemporary",
              "futuristic",
              "any"
            ],
            "default": "any",
            "description": "Historical time period for name style"
          },
          "exclude_real": {
            "type": "boolean",
            "default": false,
            "description": "Exclude real/known names from results"
          },
          "min_length": {
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "default": 2,
            "description": "Minimum name length"
          },
          "max_length": {
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "default": 20,
            "description": "Maximum name length"
          }
        }
      },
      "PersonNameResponse": {
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonName"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/GenerationMetadata"
          }
        }
      },
      "PersonName": {
        "type": "object",
        "properties": {
          "full_name": {
            "type": "string",
            "description": "Complete generated name"
          },
          "first_name": {
            "type": "string",
            "description": "First/given name"
          },
          "middle_name": {
            "type": "string",
            "description": "Middle name (if applicable)"
          },
          "last_name": {
            "type": "string",
            "description": "Last/family name"
          },
          "nickname": {
            "type": "string",
            "description": "Possible nickname"
          },
          "pronunciation": {
            "type": "string",
            "description": "Phonetic pronunciation guide"
          },
          "origin": {
            "type": "string",
            "description": "Cultural/linguistic origin"
          },
          "meaning": {
            "type": "string",
            "description": "Name meaning (if available)"
          },
          "generation_method": {
            "type": "string",
            "description": "Method used to generate this name"
          }
        }
      },
      "PlaceNameRequest": {
        "type": "object",
        "required": [
          "count"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "description": "Number of place names to generate"
          },
          "place_type": {
            "type": "string",
            "enum": [
              "city",
              "town",
              "village",
              "country",
              "region",
              "mountain",
              "river",
              "lake",
              "forest",
              "desert",
              "island",
              "continent",
              "landmark",
              "building",
              "street",
              "district",
              "fictional"
            ],
            "default": "city",
            "description": "Type of place to name"
          },
          "geographic_style": {
            "type": "string",
            "enum": [
              "european",
              "american",
              "asian",
              "african",
              "oceanic",
              "arctic",
              "tropical",
              "desert",
              "mountain",
              "coastal",
              "fantasy",
              "sci_fi",
              "any"
            ],
            "default": "any",
            "description": "Geographic/cultural style"
          },
          "generation_method": {
            "type": "string",
            "enum": [
              "toponymic_pattern",
              "descriptive",
              "historical",
              "compound",
              "phonetic_blend",
              "markov_chain",
              "syllable_based",
              "random"
            ],
            "default": "random",
            "description": "Method for generating place names"
          },
          "language_influence": {
            "type": "string",
            "enum": [
              "english",
              "spanish",
              "french",
              "german",
              "italian",
              "nordic",
              "slavic",
              "arabic",
              "chinese",
              "japanese",
              "latin",
              "mixed"
            ],
            "default": "mixed",
            "description": "Language influence on naming"
          },
          "exclude_real": {
            "type": "boolean",
            "default": false,
            "description": "Exclude real place names"
          }
        }
      },
      "PlaceNameResponse": {
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlaceName"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/GenerationMetadata"
          }
        }
      },
      "PlaceName": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Generated place name"
          },
          "type": {
            "type": "string",
            "description": "Type of place"
          },
          "pronunciation": {
            "type": "string",
            "description": "Phonetic pronunciation"
          },
          "etymology": {
            "type": "string",
            "description": "Linguistic origin and meaning"
          },
          "description": {
            "type": "string",
            "description": "Generated description of the place"
          },
          "generation_method": {
            "type": "string",
            "description": "Method used for generation"
          }
        }
      },
      "EventNameRequest": {
        "type": "object",
        "required": [
          "count"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "description": "Number of event names to generate"
          },
          "event_type": {
            "type": "string",
            "enum": [
              "festival",
              "conference",
              "competition",
              "celebration",
              "ceremony",
              "concert",
              "exhibition",
              "tournament",
              "gala",
              "workshop",
              "meetup",
              "convention",
              "seminar",
              "performance",
              "fair",
              "charity",
              "fundraiser",
              "awards",
              "launch",
              "summit"
            ],
            "default": "festival",
            "description": "Type of event"
          },
          "theme": {
            "type": "string",
            "enum": [
              "technology",
              "arts",
              "sports",
              "music",
              "food",
              "culture",
              "business",
              "science",
              "education",
              "environment",
              "health",
              "fashion",
              "gaming",
              "literature",
              "film",
              "social",
              "any"
            ],
            "default": "any",
            "description": "Event theme or category"
          },
          "tone": {
            "type": "string",
            "enum": [
              "formal",
              "casual",
              "fun",
              "professional",
              "creative",
              "inspiring"
            ],
            "default": "professional",
            "description": "Tone of the event name"
          },
          "generation_method": {
            "type": "string",
            "enum": [
              "descriptive",
              "compound",
              "creative_blend",
              "acronym",
              "alliterative",
              "thematic",
              "location_based",
              "random"
            ],
            "default": "random",
            "description": "Method for generating event names"
          }
        }
      },
      "EventNameResponse": {
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventName"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/GenerationMetadata"
          }
        }
      },
      "EventName": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Generated event name"
          },
          "tagline": {
            "type": "string",
            "description": "Suggested tagline for the event"
          },
          "abbreviation": {
            "type": "string",
            "description": "Abbreviated form of the name"
          },
          "type": {
            "type": "string",
            "description": "Type of event"
          },
          "theme": {
            "type": "string",
            "description": "Event theme"
          },
          "description": {
            "type": "string",
            "description": "Brief description of the event concept"
          }
        }
      },
      "TitleRequest": {
        "type": "object",
        "required": [
          "count"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "description": "Number of titles to generate"
          },
          "title_type": {
            "type": "string",
            "enum": [
              "book",
              "movie",
              "song",
              "album",
              "article",
              "blog_post",
              "podcast",
              "video",
              "documentary",
              "series",
              "game",
              "app",
              "course",
              "presentation",
              "report",
              "thesis"
            ],
            "default": "book",
            "description": "Type of title to generate"
          },
          "genre": {
            "type": "string",
            "enum": [
              "fiction",
              "non_fiction",
              "fantasy",
              "sci_fi",
              "mystery",
              "romance",
              "thriller",
              "horror",
              "adventure",
              "drama",
              "comedy",
              "action",
              "historical",
              "biography",
              "self_help",
              "technical",
              "academic",
              "children",
              "young_adult",
              "any"
            ],
            "default": "any",
            "description": "Genre or category"
          },
          "tone": {
            "type": "string",
            "enum": [
              "serious",
              "playful",
              "mysterious",
              "inspiring",
              "dramatic",
              "humorous"
            ],
            "default": "serious",
            "description": "Tone of the title"
          },
          "generation_method": {
            "type": "string",
            "enum": [
              "keyword_based",
              "metaphorical",
              "question_based",
              "descriptive",
              "intriguing",
              "numbered",
              "how_to",
              "creative_blend",
              "random"
            ],
            "default": "random",
            "description": "Method for generating titles"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Keywords to influence title generation"
          }
        }
      },
      "TitleResponse": {
        "type": "object",
        "properties": {
          "titles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Title"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/GenerationMetadata"
          }
        }
      },
      "Title": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Generated title"
          },
          "subtitle": {
            "type": "string",
            "description": "Suggested subtitle"
          },
          "type": {
            "type": "string",
            "description": "Type of title"
          },
          "genre": {
            "type": "string",
            "description": "Genre category"
          },
          "description": {
            "type": "string",
            "description": "Brief description of the title concept"
          },
          "seo_keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "SEO-friendly keywords"
          }
        }
      },
      "BatchRequest": {
        "type": "object",
        "required": [
          "requests"
        ],
        "properties": {
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchItem"
            },
            "description": "Array of different name generation requests"
          }
        }
      },
      "BatchItem": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "person",
              "place",
              "event",
              "title"
            ],
            "description": "Type of name to generate"
          },
          "request": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PersonNameRequest"
              },
              {
                "$ref": "#/components/schemas/PlaceNameRequest"
              },
              {
                "$ref": "#/components/schemas/EventNameRequest"
              },
              {
                "$ref": "#/components/schemas/TitleRequest"
              }
            ]
          }
        }
      },
      "BatchResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchResult"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/GenerationMetadata"
          }
        }
      },
      "BatchResult": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of names generated"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PersonNameResponse"
              },
              {
                "$ref": "#/components/schemas/PlaceNameResponse"
              },
              {
                "$ref": "#/components/schemas/EventNameResponse"
              },
              {
                "$ref": "#/components/schemas/TitleResponse"
              }
            ]
          }
        }
      },
      "GenerationMetadata": {
        "type": "object",
        "properties": {
          "total_generated": {
            "type": "integer",
            "description": "Total number of names generated"
          },
          "generation_time": {
            "type": "number",
            "description": "Time taken to generate names (in seconds)"
          },
          "method_used": {
            "type": "string",
            "description": "Primary generation method used"
          },
          "unique_names": {
            "type": "integer",
            "description": "Number of unique names generated"
          },
          "filters_applied": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of filters applied during generation"
          }
        }
      }
    }
  }
}